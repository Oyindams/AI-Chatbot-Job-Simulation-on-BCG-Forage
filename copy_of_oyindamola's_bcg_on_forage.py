# -*- coding: utf-8 -*-
"""Copy of Oyindamola's  BCG on Forage.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1-xFK78Z8i4sKi8UwJ_yOmlYL7NjQxWSH
"""

!pip install pandas matplotlib openpyxl

import pandas as pd
import matplotlib.pyplot as plt

# Check the shape (number of rows and columns)
print(df.shape)

# Check the data types of each column
print(df.dtypes)

# Plotting Total Revenue for each company
companies = df['Company'].unique()  # Get unique company names

for company in companies:
    company_data = df[df['Company'] == company]

    # Set Fiscal Year as the index
    company_data.set_index('Fiscal Year', inplace=True)

    # Plot the Total Revenue over time for the current company
    plt.plot(company_data.index, company_data['Total Revenue'], marker='o', label=company)

# Customize the plot
plt.title('Total Revenue Trend for Microsoft, Tesla, and Apple')
plt.xlabel('Fiscal Year')
plt.ylabel('Total Revenue (in billions)')
plt.legend()
plt.grid(True)
plt.show()

# Calculate Year-over-Year (YoY) Growth for Financial Metrics
df['Revenue Growth (%)'] = df.groupby('Company')['Total Revenue'].pct_change() * 100
df['Net Income Growth (%)'] = df.groupby('Company')['Net Income'].pct_change() * 100
df['Total Assets Growth (%)'] = df.groupby('Company')['Total Assets'].pct_change() * 100
df['Total Liabilities Growth (%)'] = df.groupby('Company')['Total Liabilities'].pct_change() * 100
df['Cash Flow Growth (%)'] = df.groupby('Company')['Cash Flow from Operating System'].pct_change() * 100

# Calculate average growth for each company across all years
average_growth = df.groupby('Company').agg({
    'Revenue Growth (%)': 'mean',
    'Net Income Growth (%)': 'mean',
    'Total Assets Growth (%)': 'mean',
    'Total Liabilities Growth (%)': 'mean',
    'Cash Flow Growth (%)': 'mean'
}).reset_index()

# Display the average growth per company
print(average_growth)

# Compare growth rates for all companies in a specific year (e.g., 2023)
yoy_comparison_2023 = df[df['Fiscal Year'] == 2023][['Company', 'Revenue Growth (%)', 'Net Income Growth (%)', 'Total Assets Growth (%)', 'Total Liabilities Growth (%)', 'Cash Flow Growth (%)']]

# Display the comparison for 2023
print(yoy_comparison_2023)

# Aggregate financial data by year
annual_summary = df.groupby('Fiscal Year').agg({
    'Total Revenue': 'sum',
    'Net Income': 'sum',
    'Total Assets': 'sum',
    'Total Liabilities': 'sum',
    'Cash Flow from Operating System': 'sum'
}).reset_index()

# Display the annual summary
print(annual_summary)

# Pivot table for Total Revenue by Company and Year
pivot_revenue = df.pivot_table(index='Fiscal Year', columns='Company', values='Total Revenue', aggfunc='sum')

# Display the pivot table for Total Revenue
print(pivot_revenue)

### Year-over-Year Growth Analysis
"In this analysis, we calculated the year-over-year (YoY) growth for five key financial metrics: **Total Revenue**, **Net Income**, **Total Assets**, **Total Liabilities**, and **Cash Flow from Operating Activities**. The percentage change was calculated using the `pct_change()` method in pandas, which computes the difference between consecutive years as a percentage."

#### Observations
"- **Total Revenue Growth**: We observed that Microsoft showed consistent revenue growth over the past three years, while Tesla had a significant spike in 2023."
"- **Net Income Growth**: Apple's net income grew at a slower pace compared to its revenue, suggesting higher operating costs or investments."
"- **Cash Flow**: Tesla demonstrated a strong increase in cash flow, driven by both higher revenue and improved efficiency."

#### Insights
"- Microsoft appears to be on a stable growth trajectory, with steady revenue and net income growth."
"- Tesla's growth in revenue and cash flow has been impressive, but it should focus on sustaining profitability in the long run."
"- Apple, while a leader in total revenue, shows slower growth in net income, indicating potential challenges in maintaining profitability margins."

### Markdown
"In this, I first installed my libraries, then i loaded the data set from my drive and imported my other libraries, checked for some data types and visualized my reports for the Total revenue for each of the Companies."

!apt-get install texlive-xetex
!jupyter nbconvert --to pdf /content/your_notebook_name.ipynb